version: "3.8"

services:
  postgresql:
    image: postgres:12-alpine
    restart: unless-stopped
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER:-authentik}
      POSTGRES_DB: ${PG_DB:-authentik}
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: unless-stopped

  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.3.3}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    volumes:
      - ./data/media:/media
      - ./data/custom-templates:/templates
      - geoip:/geoip
    env_file:
      - .env
    ports:
      - "0.0.0.0:${AUTHENTIK_PORT_HTTP:-9000}:9000"
      - "0.0.0.0:${AUTHENTIK_PORT_HTTPS:-9443}:9443"

  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.3.3}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    user: root
    volumes:
      - ./data/media:/media
      - ./data/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/custom-templates:/templates
      - geoip:/geoip
    env_file:
      - .env

  geoipupdate:
    image: "maxmindinc/geoipupdate:latest"
    volumes:
      - "geoip:/usr/share/GeoIP"
    environment:
      GEOIPUPDATE_EDITION_IDS: "GeoLite2-City"
      GEOIPUPDATE_FREQUENCY: "8"
    env_file:
      - .env

  db-backup: # Backups handled by https://github.com/tiredofit/docker-db-backup
    image: tiredofit/db-backup:latest
    tmpfs:
      - /tmp
    volumes:
      - ./data/db-backups:/backup
    environment:
      DB_TYPE: pgsql
      DB_HOST: postgresql
      DB_NAME: ${PG_DB:-authentik}
      DB_USER: ${PG_USER:-authentik}
      DB_PASS: ${PG_PASS}
      DB_DUMP_FREQ: ${DB__BACKUP_DUMP_FREQ:-1440}
      DB_DUMP_BEGIN: ${DB__BACKUP_DUMP_BEGIN:-0300}
      DB_CLEANUP_TIME: ${DB__BACKUP_CLEANUP_TIME:-10080}
      CHECKSUM: ${DB__BACKUP_CHECKSUM:-SHA1}
      COMPRESSION: ${DB__BACKUP_COMPRESSION:-ZSTD}
    restart: unless-stopped
    depends_on:
      - postgresql

volumes:
  database:
    driver: local
  geoip:
    driver: local
