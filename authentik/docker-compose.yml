version: "3.8"

services:
  postgresql:
    image: postgres:12-alpine
    restart: unless-stopped
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PG_PASS:?database password required}
      - POSTGRES_USER=${PG_USER:-authentik}
      - POSTGRES_DB=${PG_DB:-authentik}
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: unless-stopped

  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.3.3}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    volumes:
      - ./data/media:/media
      - ./data/custom-templates:/templates
      - geoip:/geoip
    env_file:
      - .env
    ports:
      - "0.0.0.0:${AUTHENTIK_PORT_HTTP:-9000}:9000"
      - "0.0.0.0:${AUTHENTIK_PORT_HTTPS:-9443}:9443"

  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.3.3}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    user: root
    volumes:
      - ./data/media:/media
      - ./data/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/custom-templates:/templates
      - geoip:/geoip
    env_file:
      - .env

  geoipupdate:
    image: "maxmindinc/geoipupdate:latest"
    volumes:
      - "geoip:/usr/share/GeoIP"
    environment:
      GEOIPUPDATE_EDITION_IDS: "GeoLite2-City"
      GEOIPUPDATE_FREQUENCY: "8"
    env_file:
      - .env

  backups:
    image: prodrigestivill/postgres-backup-local:12-alpine
    restart: unless-stopped
    # user: postgres:postgres TODO: Maybe enable in the future
    volumes:
      - ./data/backups:/backups
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${PG_DB:-authentik}
      - POSTGRES_USER=${PG_USER:-authentik}
      - POSTGRES_PASSWORD=${PG_PASS:?database password required}
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=${DB_BACKUP_SCHEDULE}
      - BACKUP_KEEP_DAYS=${DB_BACKUP_KEEP_DAYS}
      - BACKUP_KEEP_WEEKS=${DB_BACKUP_KEEP_WEEKS}
      - BACKUP_KEEP_MONTHS=${DB_BACKUP_KEEP_MONTHS}
      - HEALTHCHECK_PORT=8080
    depends_on:
      - postgresql

volumes:
  database:
    driver: local
  geoip:
    driver: local
