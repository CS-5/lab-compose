version: "3.8"

services:
  vaultwarden:
    image: vaultwarden/server:${VAULT_TAG:-latest}
    restart: unless-stopped
    ports:
      - "${VAULT_PORT_HTTP:-9011}:80"
      - "${VAULT_PORT_WS:-9012}:3012"
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-vault}:${DB_PASS:?database password required}@db:${DB_PORT:-5432}/${DB_NAME:-vault}
      - ADMIN_TOKEN=${VAULT_ADMIN_TOKEN:?admin token required}
      - DOMAIN=${VAULT_DOMAIN}
      - SMTP_FROM=${VAULT_SMTP_FROM}
      - SMTP_HOST=#{VAULT_SMTP_HOST}
      - SMTP_PORT=${VAULT_SMTP_PORT}
      - SMTP_SSL=${VAULT_SMTP_SSL}
      - SMTP_FROM_NAME=${VAULT_NAME}
      - YUBICO_SECRET_KEY=${VAULT_YUBICO_SECRET}
      - YUBICO_CLIENT_ID=${VAULT_YUBICO_CLIENT}
      - SIGNUPS_VERIFY=${VAULT_SIGNUPS_VERIFY}
      - SIGNUPS_ALLOWED=${VAULT_SIGNUPS_ALLOWED}
      - INVITATIONS_ALLOWED=${VAULT_INVITATIONS_ALLOWED}
      - INVITATION_ORG_NAME=${VAULT_NAME}
      - WEBSOCKET_ENABLED=true
    volumes:
      - ./data/bitwarden:/data
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME:-vault}
      - POSTGRES_USER=${DB_USER:-vault}
      - POSTGRES_PASSWORD=${DB_PASS:-vaultpassword}
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  backups:
    image: prodrigestivill/postgres-backup-local:13-alpine
    restart: unless-stopped
    # user: postgres:postgres TODO: Maybe enable in the future
    volumes:
      - ./data/backups:/backups
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${DB_NAME:-vault}
      - POSTGRES_USER=${DB_USER:-vault}
      - POSTGRES_PASSWORD=${DB_PASS:-vaultpassword}
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=${DB_BACKUP_SCHEDULE}
      - BACKUP_KEEP_DAYS=${DB_BACKUP_KEEP_DAYS}
      - BACKUP_KEEP_WEEKS=${DB_BACKUP_KEEP_WEEKS}
      - BACKUP_KEEP_MONTHS=${DB_BACKUP_KEEP_MONTHS}
      - HEALTHCHECK_PORT=8080
    depends_on:
      db:
        condition: service_healthy

volumes:
  database:
    driver: local
